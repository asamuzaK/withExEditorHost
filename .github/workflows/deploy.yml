name: deploy

on:
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: deploy binaries
    strategy:
      matrix:
        include:
          - node-version: 14.x
            os: ubuntu-latest
            app-name: linux-x86_64.zip
            make-args: --make-args="-j4"
            target: ./pkg/linux/index
            zip-cmd: zippkg:linux
            zip-file: ./dist/linux-x86_64.zip
          - node-version: 14.x
            os: macos-latest
            app-name: macos.zip
            make-args: --make-args="-j4"
            target: ./pkg/macos/index
            zip-cmd: zippkg:macos
            zip-file: ./dist/macos.zip
          - node-version: 14.x
            os: windows-latest
            app-name: win64.zip
            make-args: ''
            target: ./pkg/win/index.exe
            zip-cmd: zippkg:win
            zip-file: ./dist/win64.zip
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: set up NASM
        uses: ilammy/setup-nasm@v1
      - name: install dependencies
        run: npm install
      - name: run test
        run: |
          npm run lint
          npm test
      - name: build binary
        run: |
          mkdir -p ./{bundle,dist,download,pkg/{linux,macos,win}}
          npm run bundle
          npm run package -- -t ${{ matrix.target }} ${{ matrix.make-args }} && chmod 755 ${{ matrix.target }}
      - name: zip package
        run: npm run ${{ matrix.zip-cmd }} && zipinfo ${{ matrix.zip-file }}
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.zip-file }}
          asset_name: ${{ matrix.app-name }}
          asset_content_type: application/zip
      - name: release asset info
        run: |
          curl ${{ steps.upload-release-asset.outputs.browser_download_url }} -o ./download/${{ matrix.app-name }} && zipinfo ./download/${{ matrix.app-name }}
