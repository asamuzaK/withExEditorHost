name: deploy

on:
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: deploy release assets
    strategy:
      matrix:
        include:
          - node-version: 18.x
            os: ubuntu-latest
            python-version: '3.x'
            asset-name: linux-x86_64.tar.gz
            pkg-dir: pkg/linux
            bin-file: ./pkg/linux/index
            make-args: --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2
            zip-cmd: cd ./pkg/linux && tar -cvzf linux-x86_64.tar.gz LICENSE README.md README.ja.md index && cd ../../
            zip-mime: application/gzip
          - node-version: 18.x
            os: macos-latest
            python-version: '3.x'
            asset-name: macos.tar.gz
            pkg-dir: pkg/macos
            bin-file: ./pkg/macos/index
            make-args: --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2 --macho-segment-name NODE_JS
            zip-cmd: cd ./pkg/macos && tar -cvzf macos.tar.gz LICENSE README.md README.ja.md index && cd ../../
            zip-mime: application/gzip
          - node-version: 18.x
            os: windows-latest
            python-version: '3.x'
            asset-name: win64.zip
            pkg-dir: pkg/win
            bin-file: ./pkg/win/index.exe
            make-args: --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2
            zip-cmd: npm run zip-jszip -- -o ./pkg/win/win64.zip ./pkg/win/LICENSE ./pkg/win/README.md ./pkg/win/README.ja.md ./pkg/win/index.exe
            zip-mime: application/zip
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          check-latest: true
          node-version: ${{ matrix.node-version }}
      - name: install dependencies
        run: npm install
      - name: prepare build
        run: npm run prebuild
      - name: make directories
        run: mkdir -p ./{bundle,${{ matrix.pkg-dir }}}
      - name: build binary
        run: |
          npm run bundle-js
          cp ./bundle/index.js ${{ matrix.pkg-dir }}/index.js
          cp $(command -v node) ${{ matrix.bin-file }}
          npx postject ${{ matrix.bin-file }} NODE_JS_CODE ${{ matrix.pkg-dir }}/index.js ${{ matrix.make-args }}
      - name: verify binary
        run: stat ${{ matrix.bin-file }}
      - name: zip package
        run: |
          cp ./LICENSE ./README.md ./README.ja.md ./${{ matrix.pkg-dir }}
          ${{ matrix.zip-cmd }}
          stat ./${{ matrix.pkg-dir}}/${{ matrix.asset-name }}
      - name: upload release asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.pkg-dir}}/${{ matrix.asset-name }}
          asset_name: ${{ matrix.asset-name }}
          asset_content_type: ${{ matrix.zip-mime }}
